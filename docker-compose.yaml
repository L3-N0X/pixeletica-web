version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Build-time environment variables
        - VITE_API_BASE_URL=${API_BASE_URL:-http://localhost:8000}
        - VITE_APP_VERSION=${APP_VERSION:-1.0.0}
    image: pixeletica/frontend:${TAG:-latest}
    container_name: pixeletica-frontend
    restart: unless-stopped
    ports:
      - '${FRONTEND_PORT:-3000}:3000'
    environment:
      # Runtime environment variables
      - NODE_ENV=${NODE_ENV:-production}
      - API_BASE_URL=${API_BASE_URL:-http://localhost:8000}
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - DEFAULT_LOCALE=${DEFAULT_LOCALE:-en}
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Add volume for persistent data if needed
      - ${DATA_VOLUME:-./data}:/data
    networks:
      - pixeletica-network
    healthcheck:
      test: ['CMD', 'wget', '-q', '--spider', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Example backend configuration
  backend:
    image: ${BACKEND_IMAGE:-pixeletica/backend:latest}
    container_name: pixeletica-backend
    restart: unless-stopped
    ports:
      - '${BACKEND_PORT:-8000}:8000'
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MAX_WORKERS=${MAX_WORKERS:-4}
      - DATA_DIR=/data
      - ALLOW_ORIGINS=${FRONTEND_URL:-http://localhost:3000}
    volumes:
      - ${DATA_VOLUME:-./data}:/data
    networks:
      - pixeletica-network
    healthcheck:
      test: ['CMD', 'wget', '-q', '--spider', 'http://localhost:8000/']
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  pixeletica-network:
    name: pixeletica-network
